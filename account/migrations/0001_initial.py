# Generated by Django 2.1.5 on 2019-03-01 04:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=10, verbose_name='昵称')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='组名')),
                ('group_user', models.ManyToManyField(related_name='用户', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '用户组',
                'verbose_name': '用户组',
            },
        ),
        migrations.CreateModel(
            name='AdminPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='权限')),
                ('des', models.CharField(blank=True, max_length=15, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name_plural': '用户权限',
                'verbose_name': '用户权限',
            },
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='银行卡名字')),
                ('account_type', models.IntegerField(choices=[(0, '入款'), (1, '出款'), (2, '入款中转'), (3, '出款中转')], verbose_name='银行卡的类型')),
                ('initial_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='初始金额')),
                ('is_disable', models.BooleanField(default=False, verbose_name='是否停用')),
            ],
            options={
                'verbose_name_plural': '银行卡',
                'verbose_name': '银行卡',
            },
        ),
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='银行名字')),
            ],
            options={
                'verbose_name_plural': '银行',
                'verbose_name': '银行',
            },
        ),
        migrations.CreateModel(
            name='LogInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='操作人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('action_data', models.CharField(max_length=255, verbose_name='操作内容')),
                ('ip', models.GenericIPAddressField(verbose_name='IP地址')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='金额')),
                ('type', models.IntegerField(choices=[(0, '转入'), (1, '转出')], verbose_name='操作类型')),
                ('fees', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='手续费')),
                ('remark', models.CharField(max_length=40, verbose_name='备注')),
                ('create_time', models.DateTimeField(verbose_name='创建时间')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='余额')),
                ('sort', models.IntegerField(default=0, verbose_name='排序字段')),
                ('bankcard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.BankCard', verbose_name='银行卡')),
            ],
            options={
                'verbose_name_plural': '转账记录',
                'verbose_name': '转账记录',
            },
        ),
        migrations.CreateModel(
            name='TransferType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='转入类型')),
                ('transfer_type', models.IntegerField(choices=[(0, '转入'), (1, '转出')], default=0, verbose_name='类型')),
            ],
        ),
        migrations.CreateModel(
            name='YesterdayBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(verbose_name='记录时间')),
                ('real_time', models.DateTimeField(auto_now_add=True, verbose_name='实际时间')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='余额')),
            ],
        ),
        migrations.AddField(
            model_name='bankcard',
            name='bank_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Banks', verbose_name='所属银行'),
        ),
        migrations.AddField(
            model_name='bankcard',
            name='editor',
            field=models.ForeignKey(on_delete='管理员', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='admingroup',
            name='permission',
            field=models.ManyToManyField(to='account.AdminPermission', verbose_name='权限'),
        ),
    ]
